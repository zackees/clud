#!/bin/bash
# Ensure UTF-8 everywhere (console and Python), including on Windows msys/cygwin
case "$OSTYPE" in
  msys*|cygwin*)
    if command -v chcp.com >/dev/null 2>&1; then
      # Attempt to switch Windows code page to UTF-8 (65001)
      chcp.com 65001 >/dev/null 2>&1
    fi
    ;;
  *)
    :
    ;;
esac
export LANG=C.UTF-8
export LC_ALL=C.UTF-8
export PYTHONUTF8=1
export PYTHONIOENCODING=UTF-8

# Check if uv is installed
if ! command -v uv &> /dev/null; then
    echo "Error: uv is not installed. Please install uv first." >&2
    echo "Visit https://docs.astral.sh/uv/getting-started/installation/ for installation instructions." >&2
    exit 1
fi

set -ex
if [ ! -d ".venv" ]; then
    echo "Creating Python 3.13 virtual environment..."
    uv venv --python 3.13
else
    echo "Virtual environment already exists. Skipping."
fi
uv pip install -e ".[dev]"
# This is needed to force the installation to finalize.
uv run python -c "import os; _ = os.getcwd()"

# Install Playwright browsers (for end-to-end testing)
echo "Installing Playwright browsers..."
uv run playwright install chromium
set +e

# if ./activate exists, remove it
if [ -f activate ]; then
    rm activate
fi
# symlink activate to .venv/bin/activate on linux/mac and .venv/Scripts/activate on windows
if [[ "$OSTYPE" == "linux-gnu"* || "$OSTYPE" == "darwin"* ]]; then
    ln -s .venv/bin/activate activate
else
    ln -s .venv/Scripts/activate activate
fi

echo "ðŸŽ‰ Installation complete!"
echo ""
echo "To use:"
echo "  - Run tests: bash test"
echo "  - Run linting: bash lint (Python only)"
echo "  - Activate environment: source activate"
