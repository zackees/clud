[build-system]
requires = ["setuptools>=65.5.1", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "clud"
readme = "README.md"
description = "Claude in a Docker Box"
requires-python = ">=3.10"
keywords = ["claude", "docker", "cli"]
license = { text = "BSD 3-Clause License" }
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    "keyring>=24.0.0",
    "docker>=6.0.0",
    "fasteners>=0.17.0",
    "appdirs>=1.4.4",
    "disklru>=0.1.0",
    "httpx>=0.24.0",
    "pywinpty>=3.0.0; sys_platform == 'win32'",
    "running-process>=1.0.1",
    "codeup>=1.0.8",
]
# Change this with the version number bump.
version = "1.0.14"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-xdist>=2.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
]
keyring-fallbacks = [
    "keyrings.cryptfile>=1.3.0",
    "cryptography>=3.0.0",
]
posix = [
    "zcmds_win32>=1.2.0; sys_platform == 'win32'",
]
full = [
    "zcmds_win32>=1.2.0; sys_platform == 'win32'",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.ruff]
line-length = 200
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "C4"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = false
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]

# Type checking configuration
typeCheckingMode = "strict"
pythonVersion = "3.10"
pythonPlatform = "All"
useLibraryCodeForTypes = true
analyzeUnannotatedFunctions = true
strictParameterNoneValue = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# Report settings
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = false
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportOptionalSubscript = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false
reportGeneralTypeIssues = true
reportPropertyTypeMismatch = true
reportFunctionMemberAccess = true
reportPrivateUsage = false
reportConstantRedefinition = false
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportOverlappingOverload = true
reportMissingSuperCall = false
reportUninitializedInstanceVariable = false
reportInvalidStringEscapeSequence = true
reportUnknownParameterType = "error"
# Relax type checking for third-party library issues (Docker API)
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "error"
reportUnknownVariableType = "warning"
reportUnknownMemberType = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportMissingReturnType = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"
reportInvalidTypeVarUse = true
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = false
reportUnnecessaryCast = false
reportUnnecessaryComparison = false
reportUnnecessaryContains = false
reportAssertAlwaysTrue = false
reportSelfClsParameterName = true
reportImplicitStringConcatenation = false
reportUndefinedVariable = true
reportUnboundVariable = true
reportInvalidStubStatement = true
reportIncompleteStub = true
reportUnsupportedDunderAll = true
reportUnusedCallResult = false
reportUnusedCoroutine = true
reportUnusedExpression = false
reportUnnecessaryTypeIgnoreComment = false
reportMatchNotExhaustive = true

# Display settings
verboseOutput = false
autoImportCompletions = false
indexing = false
functionSignatureDisplay = "compact"

[project.scripts]
clud = "clud.cli:main"
clud-bg = "clud.cli_bg:main"
clud-fb = "clud.cli_fb:main"
# yolo = "clud.yolo:main"
